{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermelemospimentel/Documents/Trybe/projetos/sd-028-b-project-trivia-react-redux/src/components/Questions.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n// import { questionsEndpoint } from '../services/Api';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Questions extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      indexQuestions: 0,\n      arrayQuestion: []\n    };\n    this.questionRender = () => {\n      const {\n        indexQuestions,\n        arrayQuestion\n      } = this.state;\n      if (arrayQuestion.length > 0) {\n        const correctRender = {\n          dataTestid: 'correct-answer',\n          correctRender: true,\n          questionsOk: arrayQuestion[indexQuestions].correct_answer,\n          color: 'green'\n        };\n        const incorrectRender = arrayQuestion[indexQuestions].incorrect_answers.map((answer, index) => ({\n          dataTestid: `wrong-answer-${index}`,\n          correctRender: false,\n          questionsOk: answer,\n          color: 'red'\n        }));\n        const questionsAll = [...incorrectRender, correctRender];\n        const magicNumber = 0.5;\n        const misturaAnswer = questionsAll.sort(() => magicNumber - Math.random());\n        // this.setState({\n        //   randomAnswer: misturaAnswer,\n        // });\n        return misturaAnswer;\n      }\n    };\n  }\n  async componentDidMount() {\n    const recoveredQuestion = localStorage.getItem('token');\n    // const { dispatch, allQuestions } = this.props;\n    const url = await (await fetch(`https://opentdb.com/api.php?amount=5&token=${recoveredQuestion}`)).json();\n    const resultsQuestions = url.results;\n    this.setState({\n      arrayQuestion: resultsQuestions\n    });\n    // dispatch(questionsEndpoint([recoveredQuestion]));\n    const invalidToken = 3;\n    if (url.response_code === invalidToken) {\n      const {\n        history\n      } = this.props;\n      localStorage.removeItem('token');\n      history.push('/');\n    }\n  }\n  render() {\n    const {\n      arrayQuestion,\n      indexQuestions\n    } = this.state;\n    const catchAll = this.questionRender();\n    return (\n      /*#__PURE__*/\n      //   <div>\n      //     {arrayQuestion.length > 0 && (\n      //       <>\n      //         <p data-testid=\"question-category\">\n      //           {arrayQuestion[indexQuestions].category}\n      //         </p>\n      //         <p data-testid=\"question-text\">\n      //           {arrayQuestion[indexQuestions].question}\n      //         </p>\n      //       </>\n      //     )}\n      //         <div data-testid=\"answer-options\">\n      //           {\n      //           arrayQuestion.length > 0 && (\n      //             catchAll.map((a) => {\n      //               <button\n      //                 key={ a.question }\n      //                 className={ a.question }\n      //                 data-testid={ a.dataTestid }\n      //                 value={ a.correct }\n      //               >\n      //                 {a.question}\n      //               </button>;\n      //             ))\n      // )\n      //             }\n      //   </div>\n      _jsxDEV(\"div\", {\n        children: [arrayQuestion.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"question-category\",\n            children: arrayQuestion[indexQuestions].category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"question-text\",\n            children: arrayQuestion[indexQuestions].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"answer-options\",\n          children: arrayQuestion.length > 0 && catchAll.map(a => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: a.questionsOk,\n            \"data-testid\": a.dataTestid,\n            value: a.correct,\n            children: a.questionsOk\n          }, a.questionsOk, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)\n    );\n  }\n}\nQuestions.propTypes = {\n  fetchingQuestions: PropTypes.func\n}.isRequired;\n\n// const mapDispatchToProps = {\n//   fetchingQuestions: questionsEndpoint,\n// };\n\n// const mapStateToProps = (state) => ({\n//   ...state.player,\n//   ...state.game,\n// });\n\nexport default Questions;\n// so criei aqui pra ser renderizado no login","map":{"version":3,"names":["React","PropTypes","Questions","Component","state","indexQuestions","arrayQuestion","questionRender","length","correctRender","dataTestid","questionsOk","correct_answer","color","incorrectRender","incorrect_answers","map","answer","index","questionsAll","magicNumber","misturaAnswer","sort","Math","random","componentDidMount","recoveredQuestion","localStorage","getItem","url","fetch","json","resultsQuestions","results","setState","invalidToken","response_code","history","props","removeItem","push","render","catchAll","category","question","a","correct","propTypes","fetchingQuestions","func","isRequired"],"sources":["/Users/guilhermelemospimentel/Documents/Trybe/projetos/sd-028-b-project-trivia-react-redux/src/components/Questions.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n// import { questionsEndpoint } from '../services/Api';\n\nclass Questions extends React.Component {\n  state = {\n    indexQuestions: 0,\n    arrayQuestion: [],\n  };\n\n  async componentDidMount() {\n    const recoveredQuestion = localStorage.getItem('token');\n    // const { dispatch, allQuestions } = this.props;\n    const url = await (await fetch(`https://opentdb.com/api.php?amount=5&token=${recoveredQuestion}`)).json();\n    const resultsQuestions = url.results;\n    this.setState({\n      arrayQuestion: resultsQuestions,\n    });\n    // dispatch(questionsEndpoint([recoveredQuestion]));\n    const invalidToken = 3;\n    if (url.response_code === invalidToken) {\n      const { history } = this.props;\n      localStorage.removeItem('token');\n      history.push('/');\n    }\n  }\n\n  questionRender = () => {\n    const { indexQuestions, arrayQuestion } = this.state;\n    if (arrayQuestion.length > 0) {\n      const correctRender = {\n        dataTestid: 'correct-answer',\n        correctRender: true,\n        questionsOk: arrayQuestion[indexQuestions].correct_answer,\n        color: 'green',\n      };\n      const incorrectRender = arrayQuestion[indexQuestions].incorrect_answers\n        .map((answer, index) => ({\n          dataTestid: `wrong-answer-${index}`,\n          correctRender: false,\n          questionsOk: answer,\n          color: 'red',\n        }));\n      const questionsAll = [\n        ...incorrectRender,\n        correctRender,\n      ];\n      const magicNumber = 0.5;\n      const misturaAnswer = questionsAll.sort(() => magicNumber - Math.random());\n      // this.setState({\n      //   randomAnswer: misturaAnswer,\n      // });\n      return misturaAnswer;\n    }\n  };\n\n  render() {\n    const { arrayQuestion, indexQuestions } = this.state;\n    const catchAll = this.questionRender();\n    return (\n    //   <div>\n    //     {arrayQuestion.length > 0 && (\n    //       <>\n    //         <p data-testid=\"question-category\">\n    //           {arrayQuestion[indexQuestions].category}\n    //         </p>\n    //         <p data-testid=\"question-text\">\n    //           {arrayQuestion[indexQuestions].question}\n    //         </p>\n    //       </>\n    //     )}\n    //         <div data-testid=\"answer-options\">\n    //           {\n    //           arrayQuestion.length > 0 && (\n    //             catchAll.map((a) => {\n    //               <button\n    //                 key={ a.question }\n    //                 className={ a.question }\n    //                 data-testid={ a.dataTestid }\n    //                 value={ a.correct }\n    //               >\n    //                 {a.question}\n    //               </button>;\n    //             ))\n    // )\n    //             }\n\n    //   </div>\n\n      <div>\n\n        {arrayQuestion.length > 0 && (\n          <>\n            <p data-testid=\"question-category\">\n              {arrayQuestion[indexQuestions].category}\n            </p>\n            <p data-testid=\"question-text\">\n              {arrayQuestion[indexQuestions].question}\n            </p>\n          </>\n\n        ) }\n\n        <div data-testid=\"answer-options\">\n\n          {arrayQuestion.length > 0 && (\n            catchAll.map((a) => (\n              <button\n                key={ a.questionsOk }\n                className={ a.questionsOk }\n                data-testid={ a.dataTestid }\n                value={ a.correct }\n              >\n                {a.questionsOk}\n              </button>\n            ))\n\n          )}\n        </div>\n\n      </div>\n    );\n  }\n}\n\nQuestions.propTypes = {\n  fetchingQuestions: PropTypes.func,\n}.isRequired;\n\n// const mapDispatchToProps = {\n//   fetchingQuestions: questionsEndpoint,\n// };\n\n// const mapStateToProps = (state) => ({\n//   ...state.player,\n//   ...state.game,\n// });\n\nexport default Questions;\n// so criei aqui pra ser renderizado no login\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}