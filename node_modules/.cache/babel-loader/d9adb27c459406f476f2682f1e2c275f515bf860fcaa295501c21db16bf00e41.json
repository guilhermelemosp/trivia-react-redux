{"ast":null,"code":"var _jsxFileName = \"/Users/guilhermelemospimentel/Documents/Trybe/projetos/sd-028-b-project-trivia-react-redux/src/Pages/Game.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import { questionsEndpoint } from '../services/Api';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Game extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      indexQuestions: 0,\n      randomAnswer: [],\n      arrayQuestion: []\n    };\n    this.questionRender = () => {\n      const {\n        indexQuestions,\n        arrayQuestion\n      } = this.state;\n      if (arrayQuestion.length > 0) {\n        const correctRender = {\n          dataTestid: 'correct-answer',\n          correctRender: true,\n          questionsOk: arrayQuestion[indexQuestions].correct_answer,\n          color: 'green'\n        };\n        const incorrectRender = arrayQuestion[indexQuestions].incorrect_answers.map((answer, index) => ({\n          dataTestid: `wrong-answer-${index}`,\n          correctRender: false,\n          questionsOk: answer,\n          color: 'red'\n        }));\n        const questionsAll = [...incorrectRender, correctRender];\n        const magicNumber = 0.5;\n        const misturaAnswer = questionsAll.sort(() => magicNumber - Math.random());\n        this.setState({\n          randomAnswer: misturaAnswer\n        });\n      }\n    };\n  }\n  async componentDidMount() {\n    const recoveredQuestion = localStorage.getItem('token');\n    // const { dispatch, allQuestions } = this.props;\n    const url = await (await fetch(`https://opentdb.com/api.php?amount=5&token=${recoveredQuestion}`)).json();\n    const resultsQuestions = url.results;\n    this.setState({\n      arrayQuestion: resultsQuestions\n    });\n    // dispatch(questionsEndpoint([recoveredQuestion]));\n    const invalidToken = 3;\n    if (url.response_code === invalidToken) {\n      const {\n        history\n      } = this.props;\n      localStorage.removeItem('token');\n      history.push('/');\n    }\n  }\n  render() {\n    // const { arrayQuestion } = this.props;\n    const {\n      indexQuestions,\n      arrayQuestion\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: arrayQuestion.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"question-category\",\n          children: arrayQuestion[indexQuestions].category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"question-text\",\n          children: arrayQuestion[indexQuestions].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"answer-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            // onClick={}\n            id: \"correct-answer\",\n            type: \"button\"\n            // className={}\n            // disabled={}\n            ,\n            \"data-testid\": \"correct-answer\",\n            children: arrayQuestion[indexQuestions].correct_answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), arrayQuestion[indexQuestions].incorrect_answers.map((incorrect, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\"\n            // onClick={}\n            ,\n            id: `wrong-answer-${index}`,\n            \"data-testid\": `wrong-answer-${index}`,\n            children: incorrect\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n}\nGame.propTypes = {\n  fetchingQuestions: PropTypes.func\n}.isRequired;\n\n// const mapDispatchToProps = {\n//   fetchingQuestions: questionsEndpoint,\n// };\n\nconst mapStateToProps = state => ({\n  ...state.player,\n  ...state.game\n});\nexport default connect(mapStateToProps)(Game);\n// so criei aqui pra ser renderizado no login","map":{"version":3,"names":["React","PropTypes","connect","Game","Component","state","indexQuestions","randomAnswer","arrayQuestion","questionRender","length","correctRender","dataTestid","questionsOk","correct_answer","color","incorrectRender","incorrect_answers","map","answer","index","questionsAll","magicNumber","misturaAnswer","sort","Math","random","setState","componentDidMount","recoveredQuestion","localStorage","getItem","url","fetch","json","resultsQuestions","results","invalidToken","response_code","history","props","removeItem","push","render","category","question","incorrect","propTypes","fetchingQuestions","func","isRequired","mapStateToProps","player","game"],"sources":["/Users/guilhermelemospimentel/Documents/Trybe/projetos/sd-028-b-project-trivia-react-redux/src/Pages/Game.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import { questionsEndpoint } from '../services/Api';\n\nclass Game extends React.Component {\n  state = {\n    indexQuestions: 0,\n    randomAnswer: [],\n    arrayQuestion: [],\n  };\n\n  async componentDidMount() {\n    const recoveredQuestion = localStorage.getItem('token');\n    // const { dispatch, allQuestions } = this.props;\n    const url = await (await fetch(`https://opentdb.com/api.php?amount=5&token=${recoveredQuestion}`)).json();\n    const resultsQuestions = url.results;\n    this.setState({\n      arrayQuestion: resultsQuestions,\n    });\n    // dispatch(questionsEndpoint([recoveredQuestion]));\n    const invalidToken = 3;\n    if (url.response_code === invalidToken) {\n      const { history } = this.props;\n      localStorage.removeItem('token');\n      history.push('/');\n    }\n  }\n\n  questionRender = () => {\n    const { indexQuestions, arrayQuestion } = this.state;\n    if (arrayQuestion.length > 0) {\n      const correctRender = {\n        dataTestid: 'correct-answer',\n        correctRender: true,\n        questionsOk: arrayQuestion[indexQuestions].correct_answer,\n        color: 'green',\n      };\n      const incorrectRender = arrayQuestion[indexQuestions].incorrect_answers\n        .map((answer, index) => ({\n          dataTestid: `wrong-answer-${index}`,\n          correctRender: false,\n          questionsOk: answer,\n          color: 'red',\n        }));\n      const questionsAll = [\n        ...incorrectRender,\n        correctRender,\n      ];\n      const magicNumber = 0.5;\n      const misturaAnswer = questionsAll.sort(() => magicNumber - Math.random());\n      this.setState({\n        randomAnswer: misturaAnswer,\n      });\n    }\n  };\n\n  render() {\n    // const { arrayQuestion } = this.props;\n    const { indexQuestions, arrayQuestion } = this.state;\n    return (\n      <div>\n\n        {arrayQuestion.length > 0 && (\n          <>\n            <p data-testid=\"question-category\">\n              {arrayQuestion[indexQuestions].category}\n            </p>\n            <p data-testid=\"question-text\">\n              {arrayQuestion[indexQuestions].question}\n            </p>\n\n            <div data-testid=\"answer-options\">\n              <button\n                // onClick={}\n                id=\"correct-answer\"\n                type=\"button\"\n                // className={}\n                // disabled={}\n                data-testid=\"correct-answer\"\n              >\n                {arrayQuestion[indexQuestions].correct_answer }\n\n              </button>\n\n              {arrayQuestion[indexQuestions].incorrect_answers\n                .map((incorrect, index) => (\n                  <button\n                    type=\"button\"\n                    // onClick={}\n                    id={ `wrong-answer-${index}` }\n                    data-testid={ `wrong-answer-${index}` }\n                    key={ index }\n                    // disabled={}\n                    // className={}\n                  >\n                    {incorrect}\n                  </button>\n                ))}\n            </div>\n          </>)}\n      </div>\n    );\n  }\n}\n\nGame.propTypes = {\n  fetchingQuestions: PropTypes.func,\n}.isRequired;\n\n// const mapDispatchToProps = {\n//   fetchingQuestions: questionsEndpoint,\n// };\n\nconst mapStateToProps = (state) => ({\n  ...state.player,\n  ...state.game,\n});\n\nexport default connect(mapStateToProps)(Game);\n// so criei aqui pra ser renderizado no login\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}